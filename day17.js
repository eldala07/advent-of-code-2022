const exampleInput = ">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>";
const realInput =
	"><<<<>><<><<<<>>>><<><<<>>><<>>>><<<<>>><<<><<<<>>><<<><<<>>>><<<><<<<><>>><>>><<<<><<<>>>><<>>>><<>><<>>><<<<>>><<>><>>><<>>>><<>><<<<><>><<>>>><<<><<<<><<<><><<>>><>><<<>>>><<<><<<<>>>><><<<<>><<<><>><>>><<>>><<<<>>>><<<<><<<<><<<><<><<<<>>>><>><<<<>><<>>><<<>>><><<<>>>><<<>>>><<<>><>><<>><<<>>>><<<<>>>><<<<>><><<<<>>>><><<>>>><<>><<<><<<>><><>>>><>><><<<<>>><<><>><<<>>>><><<><<><>>><<<<>>><>>><<<>>><<<<>><<>>>><>>>><>>>><<<<>>>><<<>>><>>><>>>><<>><<>>>><<<>>><<>>><<>>>><<<<>><<>>><>>><><<>>>><<><>>>><<>>><>><<<>><<>><><<<>>><<<>>>><><>>><<>>><<>>><<<<>>>><>>><<<<>>>><>><<<<>><<<<>>><<>><<>><>>><<<>><<<<>>><<>>>><<>><<<>>><><<>><<><<>><<<<>>>><<<<><>>>><><>>>><<<><><<<><<<<><<><>>>><><<<><<<<>>><>>>><<<<>><>>>><<>><<><><>><<<>>>><<>><<<>>>><<<<>>>><<<><<<>>><<<>><>><<<><<<>><<<<><<<>>><<<><>>><<>>><<<>>>><>><<>>>><<><<<>>><<<>>>><<<<>><<<>><<>><<<><>>><<>>><>>><<>><<>><<<<>>><>>><><<<<><<<<><<>>>><>>>><<>>>><<<<><<<<>><>><<<>>>><<<<>>><<>>>><<<<>>><<>>><<<<><<>>>><><><>>>><<>>>><<><<<>><<<>><<>>>><<>><<><<<<>>>><>><<<>><<<<><<<<>>><<>>><>>><<<<>>>><>><<<>>>><<<<>><>>>><<<>>>><>>><<<<>><<<<>>>><<<<>>><<<>>>><>><>>><<<><><<<>><<<<>>><>><<<>><>>>><<<>>>><<<>>><<<<>>><<<><<<>>><<>>>><<<>>><<<<>><<>>>><<<>><>>>><<>>>><<<<><<<><<>>>><><<<<>>>><<<<><<<<>>><<<>>>><<<<>>>><>><<<<>><<<<>>><><<<>><<<>>><>>>><<<>>><<><><<<<>>><<><<<>><<>>>><<<>><<<<>>><><<<>><<<>>>><<>>><<<>><<<<>>>><>>>><>>>><<<<><<<<>>><<><<>>>><<<<>><><>><<>><<<<>><<<>>>><>>>><<>><<>>><>>>><<<>>>><<<<>><<<>>>><<<<>><<>><<<<>>><<>><>>>><><<<<>>>><<>><<><<><<<>><>>>><<<>>>><<<>>><<<<><<<><>>><<>>><<>><<<>>><>><<<>>><<<>>>><>>><<>>>><<<>>><<><<>>><<>>>><>><<<><<><<<<>>><<<<>><>><<<>>><>><<<<>><<<<>><<>><<<<>>><<<<>>>><<<>>><<<<>>>><<><<>><<<><<<>>>><<<<><<<<>>><>>>><>><<<>>><<><><<>><<<>>>><<<><>>><<<>>><>>>><<><<<>><<<><<<<>><>>><<<>>>><>><<<><><<<>><<>><<<><<<>><<<<>>>><<<<>>><<>>><<<>>><<><<>><<<>>><<>>><<>><<<><>>><>>><<><<><><<>><>><<<><<<<>>><<<>>>><<<<>>>><>><<>>><>><>>>><<<>><<<<>>>><<<<>>><>>>><<<><<<<><<<><<<>>><<>>>><<<>><<<<>>>><<<<>>>><<<><<<<>><>>>><>><<>>>><<<<><<<>>><>>><<>>>><<<><<<<>>><<>><>><<>>><<<>>>><<<>>>><<<>>>><<<<>>><<<<>><><<<><<<>>>><<<>>>><<>><>>><<<><<<>><<<<><<><<><<<<>>><<>>>><<<<>>>><<>>><<<<>>>><<<<>>>><<<<><>><<<>><<><>>>><<<<><<>>>><<><<<>><<<<><<<<>><<>>>><<<>>><<>>>><>><<<<>><<<>><>>><<<<>>>><>>>><<<>><<<<><<>>>><<><>>>><><<>>><<<><<>><<<<><>>>><<<<><><>>>><<<<>>>><>>>><>><<<><>>><><<><<>>><<>>>><<<>>>><<><<<<><<<<><><<<<>>><<<>><<<><<<<>>><>>>><>>><<<><><>>>><>>>><<<>><<<>>>><<<<>>>><<<<><<<<>>>><<<><<><>><>>><>>>><<><<>>>><<<>>><<>>>><<<<>>><<<>>><<<>>><<<>><<>><<><<>>><<>>><<<>>><<<<>>>><>>>><<<>>>><>><>><><<>>><<<>><<<<>>><>><>><<<<>>><>><<>>><<<<>>><>>><>><<<>>>><<<<>>><<>>><>>>><>>>><<><<<<>>><<>><><<<<>><<<<>><<<<>>>><<<<>>>><<<<>>><<<>><<<>>>><<<<>>><>>><>>><>><<<>>><<><<>>><<>>><<<>>><<<<>>><<<>>>><<<>><<>>>><>><<<<>>>><<><<<<>>><<>><<>><>>>><<<>>>><<<>>>><>><<<<><>>><>><<>>><<<>>><<<>><<<>>>><<>>><<<>><<>>>><<<<>><<><<<<>>>><<>>><>>>><<<<><<<<><<><<<>><><<<>>><<<><<<><<<>>><<<<>><<<<>>><<<<>>>><>>><>>>><<<>>><<<<>><<<>>>><<<<>>><<<>><><<>>><<<>>><>>><<>>><<<>><<><<<>>><<>>><<>><<<<><<<>><<<<>>>><<<<>><>>><<<<>><<<><>>>><<>>>><>>><>><<>>>><<<>>>><<>>>><<<<>>><>>><>>><<<<>>>><>>>><>><<>><>><<<>><>><<>>><>>>><<<<>>><>>><<<><<<>>>><><<<>><>>><<<<><<<<><<<<><><<><<><<<><>>>><>><<>>><<<<>>><><<<<>><<<<><<<>>><<<>>>><<>><<<<><><<<>>>><>>><<<<><<<<>>>><>><><<<<>>>><<<<>>><>>><<<>><><<<><<<<>>>><<<<><<<>>><>><<<<>><<<>>>><<>>><<<><>><<>>>><<>>><>>><>>><<>>>><<<<>><>>>><>><<<<>>>><<>><<<>>>><<<<>>>><<>>>><<<>><<<<><<>>><><>>><>><<<<>>><<>><<<>>><<><<<>><<<<>><>>><<<><<>>><<>><<<>>>><<<>><<><<>>><<<><<<<><<<>>><<<><<><>>>><>>>><<<>>>><>><<<><<>>>><><<><<>>>><<<<>><<>>><<<<>>>><>>>><<>><<>><>>><<>><>>>><<<<>><>>><>>><<><>>>><<>><>>><<><><<<>>><>>>><<<>><<<<>>>><<<><<>>><<<<>>>><><<>>><<>><<<>>><<<>>>><>><<<<>>><<>>><>>>><>><<>>>><>>><>>><<>>><>><<<><<><<<<><>>>><<<>>>><>>>><<<<>>>><<<<><<<><<<>>><<<>><<>><<>>><<<>>><<<<>>>><<<>>><<<>>><<<><><<<>>>><>>>><>><<<>><<<>>>><><>>><<<>>>><>>>><<<>><<<<><>>><<<><<<<><<<>>>><<<<>>>><<<>>>><<><<>><>><<<>>><<<>><<<>>>><<<<>>><<<<>>><<<<><<<><<<><<<<>><<><<>>>><<<>>>><><<>><<>>><><<<<>>><<<><<<><<<>>>><<<>>><<<<>>>><<<<>><<<<>>>><><<>>><<><<>>><<><<<<><<<><><<<<><<>>>><>>><<<<>><<<<><<><<<<>>>><<<<>><<<>>>><>>><<<<>>><<<>>>><>>>><<<<>>><<<<>>>><>>><<<<>>><<<><><>>>><>>><<<<>>>><<<<><>><>>><><>><<>>><>>>><<<<><<<>>><<<<>>>><<<<>>>><<<>>><<<>>>><<<>>><<<<>><<><<>>><<<><<><<<<>>><<<<><<>><><<<><>>>><<<<>>>><<<<>>><<<>>><>>>><>><<<><<>>>><<<><<<<>>><<<><<<<>>><<<<>><><<>><<>>><>>><>>><<>>>><<>>>><<>>>><<<<><<<><<<<>>>><<>>>><><<<>><<<<>><<<>><<<>>><>><<>><<<<>>>><<<<>><><<>>>><<<>><<<<>>>><<<><<>>>><<<<>><<>>>><<<<>>>><>>>><>><>>><<<>><<<<>>>><<<>>><<<<><<<<><<><<>><<>><<<><<<<>><<<<><<>>>><<<<><>>>><>>>><>>><<>>>><<>>>><<<>>><<<><<>>>><<<><<<<>><<>>>><<><><<<<><<<><<>>>><<<>>><<<<>><<><<<>><>><<<<><><<<>>>><>><<>>>><<<>>>><<>>>><<<>><>><<>>><<<>>>><<<>>>><<<<>><<>>>><>><<<<>>>><<>><<<<>>><<>>><<><<<>>>><<<<>>><>><<>><<<<>><<<>><>><<>>>><<<>><<>>><<>><<<<>><><<<><<<<>>><<><<<><><<>>><<>><<<<>>><<<>><>><<<<>><<<<><<<<>>>><<<<>>><<>>><>>>><<<<>>><<<><<<<>><>>>><<<>>>><<><>>><<<>>><<<<>>>><<><<<>>>><<>>><<>><<<>><<<>>><<<><><><>><>>>><><>><<<>>>><<<>><<<>>>><<>><<>>><<<>>><<<>><<<<><<<<>>><>><<>><<<<>>>><<>>><<<<>><<<>>>><<<<>><<<<><>>><>>>><<>><<><<<>><<<><<<>><>>>><<<<>><<>>><<>>><<<>>>><>>>><<<<>>><<<><<<<>>><<>>><>><<>><<<>>>><<<<><>><>>><<<<>>>><>>>><<<><>>><<<><<<<>>><<<><<><<<<>><<>><<>>>><<<>>>><<<<>>>><<>><<<<><<<>>><><<<><<<>>><<<>>><><<<>>><<>>><<<<>><<<<>><<>>>><<><<<<>><<<><>>>><<<>>><<<>><<>>>><<<<><<<<>>>><<>>>><>>>><<<>>><<>>>><<<>>>><>>><<<<>>><>>>><>><><<<<>>>><<<>>><><<<><<<>>>><><<>>><<<<>>>><>><<><><<<>>><<<><<<<>>><<>><<<>>>><<<>>><<<<>><<<>><<<><<>>><<<<>>><><<>>><<<>>>><<<<>>>><<<<><<<>><>>>><>>>><<>>><<<>><<<>>>><<>><<>>>><<<><<>><><<><<><<><<<>>><>>>><>><><<<<>><>><>>>><>>><<<<>>>><<<<>>>><>>><<<>><<<<>>><<>>><<<<><<<<>>>><<<<>>>><<><<<>><<>>><<>>><<<>>>><<<<>>>><<<<>>><<>>><<><<<<><<>>>><<><<<<>><<<<>>><<<<>><<<>><<><>>><<>>>><<<<>>><<<<>>>><<<>>><>>><<<<>>>><<<<>>><<><>>><<><<<>><>>>><>>><<<<><<>><<>>>><>>><<<>>>><><<<<>>>><<<<>><<<>><<<><<<<>>><<<<>>><<>><<><<<<>>><><<>>>><<<>><<>><<<<>><<>><<>><<>>><<<<>><<<><<>>><><>>>><<<>>><<<><><<><<<<>>>><<<<>>>><><<<<><>>><<<>>><<<>><<>>>><<>><<<<>>><<><<<<>>>><<<>>>><<<>><<<>>>><>><<>><>><<<>><<><<><<<><<<<>>><>><<<<>><<<>>><<<<>>><<<<>><<<<>><<<<>>><<<<><>><<<><>>>><<>>>><<<<>><<<<>>><<>><>>><>>>><<<>>><>><<<>>><<><<<>>><<>><>>>><>><>><<><>>>><<<>>>><<>>>><<<>>>><<<>>><<<>>><<><<>>>><>>><>><<>>><<<>>><<>><<><<>><<>><<>>>><<>>>><>>><<<>>>><><<<<>><<<>>>><<<><<<<>>><<<<>>>><<>><<<><<<<>>>><><<>>>><>>><<<>>>><<<>>>><<><>><<<>>><<<<>>>><<<<><>>><<<<>><<<<>>><<<<><>>><<<<>><>>>><<<<>>><<>>>><<>>><<<<>>>><>>><><<>>>><<<><>><<<<>>>><<<<>>><<<>>>><<>><<<<>>>><>><<<><>><>>><>>><<>>><<<<>><<<>>>><<<>>><<<>>>><<<<>>><<<<>><<<<>>>><<<>>><>>>><<<>>><<<<><<<<><<>><<<<><<<<>><>><<<<>>>><<>><>>><<<><<>>><<<><<<<>><<<>>>><>>><>><<<>><<<<>>>><<<>>>><<>><>>>><<<<><<>>><<><<>>><>>><<>>><<<<>>><<<<>>><<<<>>><>>><>>>><<<><<<<>><<<>><<>>>><<<<>><<<><<<><>>>><<<>>>><<>>><<>>>><<<><<><<<><<<<>><>>>><<<<>><<><<>>>><<<<>><<<<>>><<<<>><>><<<<>>><>>>><<<<>>>><<>>>><<>>>><>>><<>><>>>><<<<>>><<<<>><>>><<>><<<<><<<>><><<<<>>>><<<<>><>>><<<<>><>>>><<><><<<<>><<<<>>><<<<><><<<>>><<><<<>><<<>>>><>>><>>>><<>>>><<>><<<>>>><>>>><<><<>>>><<><<<<>>>><>>>><<>>><<>>><><<<<>>><<<<>>><<<>><<>><>>>><<><>>><>>><<<<>><<<<>>>><<<>>>><<<<>>>><<<<>>>><<<>><>>>><<<>><<>><>>><>>><<><<<<>>>><<>><<<>>>><<<<><<<<>>>><<<><<<><<<<><<<>>><<<<>>>><<>>>><>><<<<><<>><<<<>>>><<<>>><>>>><<>>>><<<<>>><><>>>><<><>>>><<><<<<><<<><>>>><<><<<>>>><>><<<>>>><<<><>><>>>><<<>>><>>>><<>>>><>>>><<<<><>>>><<><<>><<<<><>>><<<<>>>><<<<><<<<><><<><<<>>><<<<>>>><<<<><<<>><<<<><>><>><<<>><<<<>><<>><<<><<<><<>>><<<<><<>><<<<>>><<>>>><<<<>><<>>>><<<<>>>><<<<>>><<<<><<<>>>><<>>>><<<<>><>>>><<<<><><<><>><<<<><>>>><<<>>><<<>><<<>><<<<>>><<<<>>>><>>>><><<<<>>>><>><>>>><<<>>><<<<><>>>><<>>><<<<><<<>><<<>>><<>>><<<<>>>><<<>>><<<>>>><<>><<>>><<><<<>>><<<<>>><<<>>><<<<>><><>>><<<>><<<<>><<>><><<<<>>><>>>><<<><<<<><<><<<>>><<<>><>>><<<<><<>><<<><<<>>><>><<<<>><>>>><<<>>>><<<><><<>>><>><<>><<<<>><>>>><><<<>>>><<<>><<>>>><<>>>><<>><<<<>><><>>>><<>>>><<<<><>><<><<<<>><<>>>><<<>>><<<>><<<<>><<>>>><>>>><<>>>><<<>>>><<<<><<><<<>>>><<>>>><<<>>><>>>><>><>>>><<<<>><>><><>><<><<<>><<><<<>>><<<<><<<<><<<<>>><<>>>><<<>>><<><>>>><<>>>><<>>><<>>>><<><<<<>><>>>><<<>><<<>>><<<>>>><<>><>>><>><<<>><<<>><<>>><<<><<>><<<<><<<>>>><>>><<<><<<>>>><<<>><>><>>>><>><><<>><<<<>>><<<>><<>><<<>>>><<<<>><<<>><>>>><<<<>>>><>><>><<<<>><<<>>>><<>>><<<<><>>>><<<>>>><<<<><<>>>><<><>><<>>><<<<>><<<<>>><<<<>>>><>>>><<>><<<<>>>><<>>>><<>>><<>>>><<<><<<>>><<>>><<<>><<<>>><<><<<><<<<>>>><<<><<><>>>><<>>><<>>><><<>>><<<<><<<<>>><>><<>>>><<<<>>><<<<><>>>><<<<>>>><>>>><<<>>>><<<<>>>><<<<>>><<<<>><>>><>><<><<<<>>>><>>>><>>>><<<>><>><<<><><<><<<<>><<>>><<<>><<<><<<<><<<>><<<<>><<<<><<>><<<>>><<<<><<>>><>><>>>><<>>>><<<<>>><><<<<>>><>><<<<><<<<>><<<>>><<<<><<><<><<>><<><<>>><>><<<<>>><<<>><<<<>><<<<><<<>>>><>>><><<<>><<><<>><<>>>><<>>><<>>>><<<<>>>><>>>><>>><<>>><<>>>><>>><<><<<<>>><<<>><<<<>><<<>>><<<<>>><<<><<>>>><<<>>>><<<<>><<><>>><<<><<<<>>>><><<>>>><<<>>>><><<>>>><<>>>><<<<>><<<<><<<><<>><>><>><>>><<><>>><<><<>><<<<><<>><<<<>><>><<<<>>><<<<>><<<<>>><<<><>>>><<<>>>><>>>><><>>>><<>><<<<>><>><<<>>>><<>>>><<>>><<<>>>><><>>>><<<>>>><<<<>><<<>><<>>><<><<<>><<<<>>>><<>>>><>>>><<><<>>>><>>>><<<<>><<<<><<>>><><<><<<>>>><><<>><<<>>><>>>><<>>>><><<><<>>><>><>><<<<><<>>>><<<<>><<<<>>><>>>><<<>>><<<<><>>>><<<<>>>><<>>><<>>><<<>><>><<<<><<<<>>>><><<<>><<<<>>>><<><<<>><<<>><<<<>>>><><<><>>>><><<<<>>><<<>>><<>>>><>>>><<<<>><<><<>>>><<<><<<><>>><>>><<>><<<>><><<<<>>><<<<><>>>><<<>><<>><<>><<<>><<<<>>>><<<>><>>>><<>><>><>>><<<>><>><<<<><<<<>>>><<<<>>><<<>>>><<<<>>><<<<>>><<<<>>><<><>>>><<>>>><>>><<>>>><<<>>><<>>><>><<<>>>><>><<>>><<><<>>><<<>>>><<><<><><<<>>><<<>>>><<<>><<<<>><<><<<<>>><>>>><<<<><<>>><<<>>>><<><<<>>><><<>>><<<<><<<>>><>><><<<>>><<<>>>";

const formatInput = input => input.split("").map(item => (item === "<" ? -1 : 1));

const FLOOR_HEIGHT = 1;
const MAX_BLOCK_HEIGHT = 4;
const DISTANCE_BETWEEN_BLOCKS = 4;

const SHAPES = lastYPos => [
	[
		{ x: 2, y: lastYPos + 4 },
		{ x: 3, y: lastYPos + 4 },
		{ x: 4, y: lastYPos + 4 },
		{ x: 5, y: lastYPos + 4 },
	], // Horizontal line shape
	[
		{ x: 2, y: lastYPos + 5 },
		{ x: 3, y: lastYPos + 4 },
		{ x: 3, y: lastYPos + 5 },
		{ x: 3, y: lastYPos + 6 },
		{ x: 4, y: lastYPos + 5 },
	], // Cross shape
	[
		{ x: 2, y: lastYPos + 4 },
		{ x: 3, y: lastYPos + 4 },
		{ x: 4, y: lastYPos + 4 },
		{ x: 4, y: lastYPos + 5 },
		{ x: 4, y: lastYPos + 6 },
	], // Inverse L shape
	[
		{ x: 2, y: lastYPos + 4 },
		{ x: 2, y: lastYPos + 5 },
		{ x: 2, y: lastYPos + 6 },
		{ x: 2, y: lastYPos + 7 },
	], // Vertical line shape
	[
		{ x: 2, y: lastYPos + 4 },
		{ x: 3, y: lastYPos + 4 },
		{ x: 2, y: lastYPos + 5 },
		{ x: 3, y: lastYPos + 5 },
	], // Square shape
];

const createAndPlaceBlock = (iteration, lastYPos) => {
	const nbOfShapes = SHAPES(lastYPos).length;
	return SHAPES(lastYPos)[iteration % nbOfShapes];
};

const move = (xInc, yInc, block) => {
	block.forEach(coord => {
		coord.x += xInc;
		coord.y += yInc;
	});
};

const areBlocksOverlapping = (block1, block2) => {
	return (
		block1.findIndex(
			coord => block2.findIndex(coord2 => coord2.x === coord.x && coord2.y === coord.y) !== -1
		) !== -1
	);
};

const canMove = (newX, newY, block, blocks, caveWidth, iteration) => {
	const blockCpy = [...block.map(coord => ({ ...coord }))];
	move(newX, newY, blockCpy);

	// console.log('File: day17.js, Line 66  blockCpy: ',  blockCpy);
	if (
		blockCpy.findIndex(coord => coord.x < 0) !== -1 ||
		blockCpy.findIndex(coord => coord.x >= caveWidth) !== -1
	) {
		return undefined;
	}
	if (blockCpy.findIndex(coord => coord.y < 1) !== -1) {
		return false;
	}
	for (let i = 0; i < blocks.length; i++) {
		if (areBlocksOverlapping(blockCpy, blocks[i])) {
			return iteration % 2 === 0 ? false : undefined;
		}
	}
	return true;
};

const getPositionIncrement = (iteration, gasQueue) => {
	if (iteration % 2 === 0) {
		// console.log("v");
		return [0, -1];
	} else {
		// gasQueue.shift() === -1 ? console.log(">") : console.log("<");
		return gasQueue.shift() === -1 ? [-1, 0] : [1, 0];
	}
};

const getMaxYCoordInOneBlock = block => {
	return block.reduce((acc, coord) => (coord.y > acc ? coord.y : acc), 0);
};

const getGlobalMaxYCoord = blocks => {
	return blocks.reduce((acc, block) => {
		const maxY = getMaxYCoordInOneBlock(block);
		return maxY > acc ? maxY : acc;
	}, 0);
};

const getOptimizedMaxYCoord = blocks => {
	if (blocks.length < 4) return getGlobalMaxYCoord(blocks);
	return [blocks[0], blocks[1], blocks[2], blocks[3]].reduce((acc, block) => {
		const maxY = getMaxYCoordInOneBlock(block);
		return maxY > acc ? maxY : acc;
	}, 0);
};

const drawCave = (blocks, caveWidth, caveHeight) => {
	let cave = new Array(caveHeight).fill(0).map(() => new Array(caveWidth + 2).fill("."));

	// console.log("Cave height: ", cave.length);
	blocks.forEach(block => {
		block.forEach(coord => {
			// console.log('File: day17.js, Line 104 coord.y: ', coord.y);
			cave[coord.y][coord.x + 1] = "#";
		});
	});
	cave[0].fill("-");
	cave.forEach(row => {
		row[0] = "|";
		row[row.length - 1] = "|";
	});
	cave[0][0] = "+";
	cave[0][caveWidth + 1] = "+";
	cave = cave.reverse();
	console.log("---------------------");
	cave.forEach((row, index) =>
		console.log(
			(cave.length - 1 - index < 10
				? "0" + (cave.length - 1 - index)
				: cave.length - 1 - index) +
				". " +
				row.join("")
		)
	);
};

const partOne = (input, caveWidth, nbOfBlocks) => {
	const formattedInput = formatInput(input);

	const gasQueue = [...formattedInput];
	const blocks = [];
	let lastYPos = 0;

	for (let i = 0; i < nbOfBlocks - 1; i++) {
		const block = createAndPlaceBlock(i, lastYPos);

		let iteration = 1;
		let posIncrement = getPositionIncrement(iteration, gasQueue);
		let blockCanMove = canMove(
			posIncrement[0],
			posIncrement[1],
			block,
			blocks,
			caveWidth,
			iteration
		);
		while ([undefined, true].includes(blockCanMove)) {
			if (gasQueue.length === 0) {
				gasQueue.push(...formattedInput);
			}
			iteration++;
			if (blockCanMove === undefined) {
				posIncrement = getPositionIncrement(iteration, gasQueue);
				blockCanMove = canMove(
					posIncrement[0],
					posIncrement[1],
					block,
					blocks,
					caveWidth,
					iteration
				);
				continue;
			}

			move(posIncrement[0], posIncrement[1], block);
			posIncrement = getPositionIncrement(iteration, gasQueue);
			blockCanMove = canMove(
				posIncrement[0],
				posIncrement[1],
				block,
				blocks,
				caveWidth,
				iteration
			);
		}
		blocks.unshift(block);
		lastYPos = getGlobalMaxYCoord(blocks);

		// const caveHeight = FLOOR_HEIGHT + lastYPos + DISTANCE_BETWEEN_BLOCKS + MAX_BLOCK_HEIGHT;
		// drawCave(blocks, caveWidth, caveHeight);
	}
	return getGlobalMaxYCoord(blocks);
};

const CAVE_WIDTH = 7;
const NB_BLOCKS = 2023;

console.log(partOne(exampleInput, CAVE_WIDTH, NB_BLOCKS));
console.log(partOne(realInput, CAVE_WIDTH, NB_BLOCKS));

const NB_BLOCKS_P2 = 1_000_000_000_000;

console.log(partOne(exampleInput, CAVE_WIDTH, NB_BLOCKS_P2));
console.log(partOne(realInput, CAVE_WIDTH, NB_BLOCKS_P2));
